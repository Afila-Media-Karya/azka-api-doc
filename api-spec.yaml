openapi: 3.0.3
info:
  title: Azka API Documentation
  description: |
    API documentation for Azka project
    
    This API provides endpoints for :
    - Employee authentication and register
    - Employee 
    - Profile management
    
    ## Authentication
    Most endpoints require Bearer token authentication.
  version: 1.0.0
  contact:
    name: Afila Dev Team
    email: info.rahmathidayat@gmail.com
    url: https://afila.co.id
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.azka.com/api/v1
    description: Production server
  - url: https://staging-api.azka.com/api/v1
    description: Staging server
  - url: http://localhost:port/api/v1
    description: Local development server

paths:
  # Authentication Endpoints
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Employee login
      description: Authenticate user with email and password
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              valid_login:
                summary: Valid login credentials
                value:
                  email: "aasoo@afila.co.id"
                  password: "password123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                success:
                  summary: Successful login
                  value:
                    success: true
                    message: "Success Login"
                    data:
                      token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      ttl: 123
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_credentials:
                  summary: Invalid email or password
                  value:
                    success: false
                    error:
                      code: "INVALID_CREDENTIALS"
                      message: "Invalid email or password"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
  # Employee Endpoints
  /employee:
    get:
      tags:
        - Employee
      summary: Get current employee information
      description: Retrieve the current employee's detailed information
      operationId: getCurrentEmployee
      parameters:
        - name: token
          in: query
          description: Authentication token
          required: true
          schema:
            type: string
            example: "fdasjkhfkajdhfa"
      responses:
        '200':
          description: Employee information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
              examples:
                success:
                  summary: Successful employee data retrieval
                  value:
                    success: true
                    message: "Success"
                    data:
                      id: "1"
                      name: "John Doe"
                      email: "john.doe@afila.co.id"
                      phone: "+62812345678"
                      position_id: "pos_001"
                      position_name: "Software Engineer"
                      departemen_id: "dept_001"
                      departemen_name: "IT Department"
                      profile_image_url: "https://example.com/profile/john.jpg"
                      company_name: "Afila Technology"
                      created_at: "2023-01-15T08:30:00Z"
                      updated_at: "2023-12-01T10:15:00Z"
        '401':
          description: Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_token:
                  summary: Invalid token
                  value:
                    success: false
                    error:
                      code: "INVALID_TOKEN"
                      message: "Invalid or expired token"
        '404':
          description: Employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Employee not found
                  value:
                    success: false
                    error:
                      code: "EMPLOYEE_NOT_FOUND"
                      message: "Employee information not found"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  schemas:
    # Request Schemas
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
          example: "user@example.com"
        password:
          type: string
          format: password
          minLength: 6
          description: User's password
          example: "password123"

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        total:
          type: integer
          example: 100
        total_pages:
          type: integer
          example: 10
        has_next_page:
          type: boolean
          example: true
        has_prev_page:
          type: boolean
          example: false

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code
              example: "INVALID_CREDENTIALS"
            message:
              type: string
              description: Human-readable error message
              example: "Invalid email or password"
            details:
              type: object
              description: Additional error details
              nullable: true

    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "The given data was invalid"
            details:
              type: object
              description: Field-specific validation errors
              additionalProperties:
                type: array
                items:
                  type: string
              example:
                email: ["The email field is required."]
                password: ["The password must be at least 8 characters."]

  responses:
    UnauthorizedError:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            unauthorized:
              summary: Missing or invalid token
              value:
                success: false
                error:
                  code: "UNAUTHORIZED"
                  message: "Authentication required"

    ForbiddenError:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            forbidden:
              summary: Insufficient permissions
              value:
                success: false
                error:
                  code: "FORBIDDEN"
                  message: "Insufficient permissions to access this resource"

    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            not_found:
              summary: Resource not found
              value:
                success: false
                error:
                  code: "NOT_FOUND"
                  message: "The requested resource was not found"

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: Employee
    description: Employee information and management

    Employee:
      type: object
      properties:
        id:
          type: string
          nullable: true
          description: Employee's unique identifier
          example: "1"
        name:
          type: string
          nullable: true
          description: Employee's full name
          example: "John Doe"
        email:
          type: string
          nullable: true
          format: email
          description: Employee's email address
          example: "john.doe@afila.co.id"
        phone:
          type: string
          nullable: true
          description: Employee's phone number
          example: "+62812345678"
        position_id:
          type: string
          nullable: true
          description: Employee's position ID
          example: "pos_001"
        position_name:
          type: string
          nullable: true
          description: Employee's position name
          example: "Software Engineer"
        departemen_id:
          type: string
          nullable: true
          description: Employee's department ID
          example: "dept_001"
        departemen_name:
          type: string
          nullable: true
          description: Employee's department name
          example: "IT Department"
        profile_image_url:
          type: string
          nullable: true
          description: URL to employee's profile image
          example: "https://example.com/profile/john.jpg"
        company_name:
          type: string
          nullable: true
          description: Company name
          example: "Afila Technology"
        created_at:
          type: string
          format: date-time
          nullable: true
          description: Account creation timestamp
          example: "2023-01-15T08:30:00Z"
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp
          example: "2023-12-01T10:15:00Z"

    EmployeeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Success"
        data:
          $ref: '#/components/schemas/Employee'